on:
  push:
    tags:
      - 'v[0-9]+.*'

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    # Note this. We are going to use that in further jobs.
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  release_assets:
      name: Release assets
      needs: create_release # we need to know the upload URL
      runs-on: ${{ matrix.config.os }} # we run many different builds
      strategy:
        # just an example matrix
        matrix:
          config:
            - os: ubuntu-latest
            - os: macos-latest
            - os: windows-latest
      steps:
        # checkout of cource
        - name: Checkout code
          uses: actions/checkout@v1
        # ... whatever build and packaging steps you need here
        # and finally do an upload!
        - name: Upload release assets
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ needs.create_release.outputs.upload_url }}
            # This is how it will be named on the release page. Put hatever name
            # you like, remember that they need to be different for each platform.
            # You can choose any build matrix parameters. For Rust I use the
            # target triple.
            asset_name: program-name-${{ matrix.config.os }}
            # The path to the file you want to upload.
            asset_path: ./path/to/your/file
            # probably you will need to change it, but most likely you are
            # uploading a binary file
            asset_content_type: application/octet-stream

